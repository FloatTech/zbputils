// Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/getAllPlugin": {
            "get": {
                "description": "获取所有插件的状态",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "群号",
                        "name": "groupId",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/api/getBotList": {
            "get": {
                "description": "获取机器人qq号",
                "responses": {}
            }
        },
        "/api/getFriendList": {
            "get": {
                "description": "获取好友列表",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 123456,
                        "description": "机器人qq号",
                        "name": "selfId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/getGroupList": {
            "get": {
                "description": "获取群列表",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 123456,
                        "description": "机器人qq号",
                        "name": "selfId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/getPermCode": {
            "get": {
                "description": "授权码",
                "responses": {}
            }
        },
        "/api/getPlugin": {
            "get": {
                "description": "获取某个插件的状态",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "群号",
                        "name": "groupId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "antibuse",
                        "description": "插件名",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/api/getRequestList": {
            "get": {
                "description": "获取所有的请求",
                "responses": {}
            }
        },
        "/api/getUserInfo": {
            "get": {
                "description": "获得用户信息",
                "responses": {}
            }
        },
        "/api/handleRequest": {
            "post": {
                "description": "处理一个请求",
                "parameters": [
                    {
                        "type": "string",
                        "default": "abc",
                        "description": "事件id",
                        "name": "flag",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "abc",
                        "description": "原因",
                        "name": "reason",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "default": true,
                        "description": "是否同意",
                        "name": "approve",
                        "in": "formData"
                    }
                ],
                "responses": {}
            }
        },
        "/api/login": {
            "post": {
                "description": "前端登录",
                "parameters": [
                    {
                        "type": "string",
                        "default": "xiaoguofan",
                        "description": "用户名",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "123456",
                        "description": "密码",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/logout": {
            "get": {
                "description": "登出",
                "responses": {}
            }
        },
        "/api/sendMsg": {
            "post": {
                "description": "前端调用发送信息",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "bot的QQ号",
                        "name": "selfId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 123456,
                        "description": "群号",
                        "name": "id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "HelloWorld",
                        "description": "消息文本",
                        "name": "message",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "group",
                        "description": "消息类型",
                        "name": "message_type",
                        "in": "formData"
                    }
                ],
                "responses": {}
            }
        },
        "/api/updateAllPluginStatus": {
            "post": {
                "description": "更改某群所有插件状态",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "群号",
                        "name": "groupId",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "default": true,
                        "description": "插件状态",
                        "name": "status",
                        "in": "formData"
                    }
                ],
                "responses": {}
            }
        },
        "/api/updatePluginStatus": {
            "post": {
                "description": "更改某一个插件状态",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "群号",
                        "name": "groupId",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "default": "aireply",
                        "description": "插件名",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "default": true,
                        "description": "插件状态",
                        "name": "status",
                        "in": "formData"
                    }
                ],
                "responses": {}
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "127.0.0.1:3000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "zbp api",
	Description:      "zbp restful api document",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
